service: dv-oai-srv

frameworkVersion: "4"

package:
  individually: true
  exclude:
    - node_modules/**
    - .serverless/**
    - .venv/**
    - __pycache__/**
    - .idea/**
    - ocr-pdf/**
    - bin/**
    - docs/**
    - .env
    - package.json
    - package-lock.json
    - requirements.pdf.txt

custom:
  wsgi:
    app: api/app.app
  serverlessSsmFetch:
    OPENAI_API_KEY: /serverless/deployment/credentials/openai-api-key-param
  pythonRequirements:
    useStaticCache: false
    useDownloadCache: false
    fileName: api/requirements.txt
    pipCmdExtraArgs:
      - "--platform manylinux2014_x86_64"
      - "--implementation cp"
      - "--python-version 3.11"
      - "--only-binary=:all:"
      - "--upgrade"
    layer:
      name: req-layer
      description: LLM dependencies
      compatibleRuntimes:
        - python3.11
      compatibleArchitectures:
        - x86_64
    slim: true
    noDeploy:
      - boto3
      - botocore
      - requests
      - requests_toolbelt
      - urllib3
      - certifi
      - idna
      - click
      - tqdm
      - typing_extensions
      - sniffio
      - charset_normalizer
      - aiohttp
      - blinker

provider:
  name: aws
  runtime: python3.11
  architecture: x86_64
  region: us-east-1
  environment:
    REGION: ${self:provider.region}
    OPENAI_API_KEY: ${ssm:/serverless/deployment/credentials/openai-api-key-param}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "s3:*"
          Resource:
            - Fn::Sub: "arn:aws:s3:::${DvProductBucket}/*"
        - Effect: Allow
          Action:
            - "ssm:GetParameter"
            - "ssm:GetParameters"
            - "kms:Decrypt"
          Resource: "*"
        - Effect: Allow
          Action:
            - "lambda:InvokeFunction"
          Resource: "*"

functions:
  api:
    handler: wsgi_handler.handler
    layers:
      - { Ref: PythonRequirementsLambdaLayer }
    ssmToEnvironment:
      - OPENAI_API_KEY
    environment:
      DV_PRODUCT_BUCKET:
        Ref: DvProductBucket
    events:
      - http:
          path: /process_email
          method: POST
      - http:
          path: /upload_to_bucket
          method: GET
    package:
      exclude:
        - pdf-function/**
  pdf-function:
    handler: pdf-function/handler.lambda_handler
    timeout: 60
    runtime: python3.10
    layers:
      - arn:aws:lambda:${self:provider.region}:761018871329:layer:ocr-pdf:6
    environment:
      DV_PRODUCT_BUCKET:
        Ref: DvProductBucket
    package:
      include:
        - pdf-function/**
      exclude:
        - api/**

resources:
  Resources:
    DvProductBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: dv-product-bucket

plugins:
  - serverless-wsgi
  - serverless-ssm-fetch
  - serverless-python-requirements
